version: "3.9"

services:
  notificationpostgres:
    container_name: shapeup-notification-postgres
    image: postgres:15.4
    restart: always
    ports:
      - "5433:5432"
    volumes:
        - ./data:/data/db
    environment:
      POSTGRES_USER: shapeup-notification
      POSTGRES_PASSWORD: shapeup-notification
      POSTGRES_DB: shapeup-notification
      TZ: "America/Sao_Paulo"
    networks:
      - general-network

  notificiationapp:
    build:
      dockerfile: ./Dockerfile
      context: .
    container_name: shapeup-notification-app
    environment:
      - POSTGRES_USER=shapeup-notification
      - POSTGRES_PASSWORD=shapeup-notification
      - POSTGRES_DB=shapeup-notification
      - POSTGRES_URL=jdbc:postgresql://notificationpostgres:5432/shapeup-notification
    depends_on:
      - notificationpostgres
    ports:
      - "7002:7002"
    networks:
      - general-network

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - general-network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - general-network
    restart: always

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    networks:
      - general-network

networks:
  general-network: { }